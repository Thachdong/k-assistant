// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  repoName    String
  repoOwner   String
  repoToken   String
  repoBranch  String
  sourceCode  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Spec {
  id          String   @id @default(cuid())
  title       String
  description String
  file        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum EStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}

model Testcase {
  id          String   @id @default(cuid())
  title       String
  description String
  file        String?
  specId      String
  status      EStatus  @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Design {
  id          String   @id @default(cuid())
  title       String
  description String
  file        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ERoles {
  USER
  SYSTEM
}

model Chat {
  id        String   @id @default(cuid())
  message   String
  role      ERoles
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ECompletionType {
  ADD_COMPONENT
  REFACTOR_COMPONENT
  ADD_UNIT_TEST
  ADD_STORYBOOK
}

model ChatCompletion {
  id            String         @id @default(cuid())
  type          ECompletionType
  prompt        String
  answer        String
  componentName String?
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}
